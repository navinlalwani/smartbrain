{"version":3,"sources":["Component/Navigation/Navigation.js","Component/FaceRecognition/FaceRecognition.js","Component/Logo/Logo.js","Component/ImageLinkForm/ImageLinkForm.js","Component/Rank/Rank.js","Component/SignIn/SignIn.js","Component/Register/Register.js","App.js","serviceWorker.js","index.js","Component/Logo/brain.png"],"names":["Navigation","RouteChanger","currentroute","style","display","justifyContent","onClick","className","FaceRecognition","imageurl","box","alt","src","width","height","top","right","bottom","left","Logo","options","max","brain","ImageLinkForm","OnInputChange","OnDetect","onChange","type","placeholder","Rank","name","entries","SignIn","props","OnEmailEntry","event","setState","signinemail","target","value","OnPasswordEntry","signinpassword","OnSignInClick","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","data","id","UserUpdate","this","htmlFor","React","Component","Register","OnNameEntry","OnDobEntry","dateofbirth","OnRegisterClick","particleoptions","particles","number","density","enable","value_area","initialState","input","route","user","joined","App","settingbox","obj","top_row","right_col","bottom_row","left_col","outputs","regions","region_info","bounding_box","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.41b007a8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({RouteChanger, currentroute}) => {\n\t\n\t\n\t\tif (currentroute === \"SignIn\") {\n\t\treturn(\n\t\t<nav style = {{display:'flex', justifyContent:'flex-end'}}>\n\t\t\t<p onClick = {() => RouteChanger(\"SignIn\")} className = 'f3 pointer dim pa3 underline' >SignIn</p>\n\t\t\t<p onClick = {() => RouteChanger(\"Register\")} className = 'f3 pointer dim pa3 underline' >Register</p>\n\t\t</nav>\n\t\t);\n\t\t} else if (currentroute === \"Register\") {\n\t\treturn(\n\t\t<nav style = {{display:'flex', justifyContent:'flex-end'}}>\n\t\t\t<p onClick = {() => RouteChanger(\"SignIn\")} className = 'f3 pointer dim pa3 underline' >SignIn</p>\n\t\t</nav>\n\t\t);\n\t\t} else {\n\t\treturn(\n\t\t<nav style = {{display:'flex', justifyContent:'flex-end'}}>\n\t\t\t<p onClick = {() => RouteChanger(\"SignOut\")} className = 'f3 pointer dim pa3 underline' >SignOut</p>\n\t\t</nav>\n\t\t);\n\t\t}\n\t\n\t\n};\n\nexport default Navigation;","import React from 'react';\nimport './FaceRecognition.css'\n\nconst FaceRecognition = ({imageurl, box}) => {\n\treturn(\n\t\t<div className = \"center ma2\">\n\t\t\t<div className = \"absolute\" >\n\t\t\t<img alt = \"\" src = {imageurl} width = '500px' height = \"auto\" />\n\t\t\t<div className = \"boundingbox\" style = {{top: box.top, right: box.right, bottom: box.bottom, left: box.left}} > </div>\n\t\t\t</div>\n\t\t</div>\n\t\t)\n};\n\nexport default FaceRecognition;","import React from 'react';\nimport Tilt from 'react-tilt'\nimport './Logo.css'\nimport brain from './brain.png'\n\nconst Logo = () => {\n\treturn (\n\t\t<div className = 'ma5 mt0'>\n\t\t\t<Tilt className=\"Tilt br1 shadow-2\" options={{ max : 55 }} style={{ height: 125, width: 125 }} >\n \t\t\t<div className=\"Tilt-inner\"> <img className = \"w-80 h-80 pt3\" src = {brain} alt = \"logo\"/> </div>\n\t\t\t</Tilt>\n\t\t</div>\n\t\t);\n};\n\nexport default Logo;","import React from 'react';\n\nconst ImageLinkForm = ({OnInputChange, OnDetect}) => {\n\treturn(\n\t\t<div>\n\t\t<p className = \"f5 ttu tracked\"> We can detect faces in your picture. Please enter the link to your picture : </p>\n\t\t<div className = \"center pa4 br3 shadow-5\">\n\t\t\t<input onChange = {OnInputChange} className = \"f4 pa2 w-70 center\" type = 'text' placeholder = 'Yes! you can enter your link here'/>\n\t\t\t<button onClick = {OnDetect} className = \"w-30 grow f4 link ph3 pv2 dib bg-light white bg-light-purple\"> Detect </button>\n\t\t</div>\n\n\t\t</div>\n\t\t)\n};\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({name, entries}) => {\n\treturn(\n\t\t<div>\n\t\t\t<div className = 'white f3'>\n\t\t\t\t<p>  {`${name}, your current entry count is.... `} </p>\n\t\t\t</div>\n\t\t\t<div className = 'white f3'>\n\t\t\t\t<p> {`# ${entries}`} </p>\n\t\t\t</div>\n\t\t</div>\n\t\t)\n};\n\nexport default Rank;","import React from 'react';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signinemail : \"\",\n      signinpassword : \"\"\n    }\n  }\n\n  OnEmailEntry = (event) => {\n    this.setState({signinemail : event.target.value})\n  };\n\n  OnPasswordEntry = (event) => {\n      this.setState({signinpassword : event.target.value})\n    };\n\n  OnSignInClick = (event) => {\n    fetch('https://infinite-mountain-97746.herokuapp.com/signin', {\n      method : 'post',\n      headers: { \n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }, \n      body : JSON.stringify({\n        email : this.state.signinemail,\n        password : this.state.signinpassword\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (data.id) {\n          this.props.UserUpdate(data)\n          this.props.RouteChanger(\"Home\");\n        };\n    })\n  \n   \n  };\n\n\n\trender () {\n    const {RouteChanger} = this.props\n    return(\n\t\t<article className=\"br3 shadow-5 ba  b--black-10 mv4 w-150 w-50-m w-40-l mw10 center\">\n\t\t<div className = \"pa4 black-80\" >\n\t\t\t<div className =\"measure\">\n    \t\t\t<fieldset id=\"sign_up\" className =\"ba b--transparent ph0 mh0\">\n\t\t\t      <legend className =\"f4 fw6 ph0 mh0\">Sign In</legend>\n\t\t\t      <div className =\"mt3\">\n\t\t\t        <label className =\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t        <input onChange = {this.OnEmailEntry} className =\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\n     \t\t\t  </div>\n      \t\t\t  <div className =\"mv3\">\n       \t\t\t\t <label className =\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n        \t\t\t <input onChange = {this.OnPasswordEntry} className =\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\n      \t\t\t  </div>\n   \t\t\t\t </fieldset>\n    \t\t\t\t<div onClick = {this.OnSignInClick} className =\"\">\n     \t\t\t\t\t <input className =\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\n    \t\t\t\t</div>\n    \t\t\t\t<div onClick = {() => RouteChanger(\"Register\")} className =\"lh-copy mt3\">\n      \t\t\t\t\t<p className =\"f6 link underline dim black db pointer\">Register</p>\n      \t\t\t\t\n   \t\t\t\t\t </div>\n  \t\t\t</div>\n\t\t</div>\n\t\t</article>\n\t\t)\n  }\n};\n\nexport default SignIn;","import React from 'react';\n\nclass Register extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      name : \"\",\n      dateofbirth : \"\",\n      email : \"\",\n      password : \"\"\n    }\n  }\n\n  OnNameEntry = (event) => {\n    this.setState({name : event.target.value});\n  };\n\n  OnDobEntry = (event) => {\n    this.setState({dateofbirth : event.target.value});\n  };\n\n  OnEmailEntry = (event) => {\n    this.setState({email : event.target.value});\n  };\n\n  OnPasswordEntry = (event) => {\n    this.setState({password : event.target.value});\n  };\n\n  OnRegisterClick = (event) => {\n\n    fetch('https://infinite-mountain-97746.herokuapp.com/register', {\n      method : 'post',\n      headers: { \n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }, \n      body : JSON.stringify({\n        name : this.state.name,\n        dateofbirth : this.state.dateofbirth,\n        email : this.state.email,\n        password : this.state.password,\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      if (data.id) {\n      this.props.UserUpdate(data)\n      this.props.RouteChanger(\"Home\")\n    };\n    })\n    \n   \n  };\n\n\n  render() {\n\treturn(\n\t\t<article className=\"br3 shadow-5 ba  b--black-10 mv4 w-150 w-50-m w-40-l mw10 center\">\n\t\t<div className = \"pa4 black-80\" >\n\t\t\t<div className =\"measure\">\n    \t\t\t<fieldset id=\"sign_up\" className =\"ba b--transparent ph0 mh0\">\n\t\t\t      <legend className =\"f4 fw6 ph0 mh0\">Register</legend>\n            <div className =\"mt3\">\n              <label className =\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\n              <input className =\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n              type=\"text\" \n              name=\"name\"  \n              id=\"name\"\n              onChange = {this.OnNameEntry}\n              />\n            </div>\n            <div className =\"mt3\">\n              <label className =\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Date of Birth</label>\n              <input className =\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n              type=\"date\" \n              name=\"dateofbirth\"  \n              id=\"dateofbirth\"\n              onChange = {this.OnDobEntry}\n              />\n            </div>\n\t\t\t      <div className =\"mt3\">\n\t\t\t        <label className =\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t        <input className =\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n              type=\"email\" \n              name=\"email-address\"  \n              id=\"email-address\"\n              onChange = {this.OnEmailEntry}\n              />\n     \t\t\t  </div>\n      \t\t\t  <div className =\"mv3\">\n       \t\t\t\t <label className =\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n        \t\t\t <input className =\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n               type=\"password\" \n               name=\"password\"  \n               id=\"password\"\n               onChange = {this.OnPasswordEntry}\n               />\n      \t\t\t  </div>\n   \t\t\t\t </fieldset>\n    \t\t\t\t<div onClick = {this.OnRegisterClick} className =\"\">\n     \t\t\t\t\t <input className =\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\n    \t\t\t\t</div>\n  \t\t\t</div>\n\t\t</div>\n\t\t</article>\n\t\t)\n  };\n};\n\nexport default Register;","import React from 'react';\nimport './App.css';\nimport Navigation from './Component/Navigation/Navigation';\nimport tachyons from 'tachyons';\nimport FaceRecognition from './Component/FaceRecognition/FaceRecognition';\nimport Logo from './Component/Logo/Logo';\nimport ImageLinkForm from './Component/ImageLinkForm/ImageLinkForm';\nimport Rank from './Component/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport SignIn from './Component/SignIn/SignIn';\nimport Register from './Component/Register/Register';\n\nconst particleoptions = {\n  particles : {number : {value:80,density: {enable:true,value_area:800}}}\n}\n\n\nconst initialState = {\n      input : \"\",\n      imageurl : \"\",\n      box : {},\n      route : \"SignIn\",\n      user : {\n        id : \"\",\n        name : \"\",\n        dateofbirth : \"\",\n        email : \"\",\n        password : \"\",\n        entries : \"\",\n        joined : \"\"\n      }\n    }\n\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = initialState\n  }\n\n\n  UserUpdate = (data) => {\n    this.setState({user : {\n      id : data.id,\n      name : data.name,\n      dateofbirth : data.dateofbirth,\n      email : data.email,\n      password : data.password,\n      entries : data.entries,\n      joined : data.joined\n    }})\n\n  };\n\n  OnInputChange = (event) => {\n    this.setState({input : event.target.value})\n  };\n\n  settingbox = (data) => {\n\n    const obj = {\n      top : data.top_row*100 + \"%\",\n      right : (1-data.right_col)*100 + \"%\",\n      bottom : (1 - data.bottom_row)*100 + \"%\",\n      left : data.left_col*100 + \"%\"\n    };\n    this.setState({box : obj})\n  }\n\n\n  OnDetect = (event) => {\n    this.setState({imageurl : this.state.input})\n    fetch('https://infinite-mountain-97746.herokuapp.com/imageurl', {\n      method : 'post',\n      headers: { \n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }, \n      body : JSON.stringify({\n        input : this.state.input\n      })\n    })\n    .then (response => response.json())\n    .then( (response) => {\n      this.settingbox(response.outputs[0].data.regions[0].region_info.bounding_box);\n      fetch('https://infinite-mountain-97746.herokuapp.com/image', {\n      method : 'put',\n      headers: { \n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }, \n      body : JSON.stringify({\n        id : this.state.user.id\n      })\n    })\n    .then(response => response.json())\n    .then(count => {\n      this.setState({user : Object.assign(this.state.user,{entries : count})});\n    })\n    .catch(console.log)\n    })\n    .catch((err) => console.log(err))\n      // there was an error\n    };\n\n  RouteChanger = (route) => {\n      if (route === 'SignOut') {\n        this.setState(initialState)\n      }\n      this.setState({route : route})\n    }\n  \n\n  render(){\n  return (\n    <div className=\"App\">\n      <Particles className = \"particles\" params = {particleoptions}/>\n      <Navigation currentroute = {this.state.route} RouteChanger = {this.RouteChanger} />\n      {this.state.route === \"SignIn\" || this.state.route === \"SignOut\"\n      ? <SignIn UserUpdate = {this.UserUpdate} RouteChanger = {this.RouteChanger} /> \n      : this.state.route === \"Register\"\n      ? <Register UserUpdate = {this.UserUpdate} RouteChanger = {this.RouteChanger} />\n      : <div>\n          <Logo />\n          <Rank name = {this.state.user.name} entries = {this.state.user.entries} />\n          <ImageLinkForm OnDetect = {this.OnDetect} OnInputChange = {this.OnInputChange}/>\n          <FaceRecognition box = {this.state.box} imageurl = {this.state.imageurl}/>\n        </div>\n        }\n    </div>\n\n    )\n}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.e97d42e9.png\";"],"sourceRoot":""}